/**
 * Copyright (c) 2000-present Liferay, Inc. All rights reserved.
 *
 * This library is free software; you can redistribute it and/or modify it under
 * the terms of the GNU Lesser General Public License as published by the Free
 * Software Foundation; either version 2.1 of the License, or (at your option)
 * any later version.
 *
 * This library is distributed in the hope that it will be useful, but WITHOUT
 * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS
 * FOR A PARTICULAR PURPOSE. See the GNU Lesser General Public License for more
 * details.
 */

package com.liferay.adduser.model.impl;

import com.liferay.adduser.model.UserInfo;
import com.liferay.adduser.model.UserInfoModel;
import com.liferay.adduser.model.UserInfoSoap;

import com.liferay.portal.kernel.bean.AutoEscapeBeanHandler;
import com.liferay.portal.kernel.exception.SystemException;
import com.liferay.portal.kernel.json.JSON;
import com.liferay.portal.kernel.lar.StagedModelType;
import com.liferay.portal.kernel.util.GetterUtil;
import com.liferay.portal.kernel.util.ProxyUtil;
import com.liferay.portal.kernel.util.StringBundler;
import com.liferay.portal.kernel.util.StringPool;
import com.liferay.portal.model.CacheModel;
import com.liferay.portal.model.impl.BaseModelImpl;
import com.liferay.portal.util.PortalUtil;

import java.io.Serializable;

import java.sql.Types;

import java.util.ArrayList;
import java.util.Date;
import java.util.HashMap;
import java.util.List;
import java.util.Map;

/**
 * The base model implementation for the UserInfo service. Represents a row in the &quot;PT_UserInfo&quot; database table, with each column mapped to a property of this class.
 *
 * <p>
 * This implementation and its corresponding interface {@link com.liferay.adduser.model.UserInfoModel} exist only as a container for the default property accessors generated by ServiceBuilder. Helper methods and all application logic should be put in {@link UserInfoImpl}.
 * </p>
 *
 * @author phantoan
 * @see UserInfoImpl
 * @see com.liferay.adduser.model.UserInfo
 * @see com.liferay.adduser.model.UserInfoModel
 * @generated
 */
@JSON(strict = true)
public class UserInfoModelImpl extends BaseModelImpl<UserInfo>
	implements UserInfoModel {
	/*
	 * NOTE FOR DEVELOPERS:
	 *
	 * Never modify or reference this class directly. All methods that expect a user info model instance should use the {@link com.liferay.adduser.model.UserInfo} interface instead.
	 */
	public static final String TABLE_NAME = "PT_UserInfo";
	public static final Object[][] TABLE_COLUMNS = {
			{ "uuid_", Types.VARCHAR },
			{ "groupId", Types.BIGINT },
			{ "companyId", Types.BIGINT },
			{ "creatorId", Types.BIGINT },
			{ "createDate", Types.TIMESTAMP },
			{ "modifiedDate", Types.TIMESTAMP },
			{ "userId", Types.BIGINT },
			{ "code_", Types.VARCHAR },
			{ "username", Types.VARCHAR },
			{ "email", Types.VARCHAR },
			{ "phone", Types.VARCHAR }
		};
	public static final String TABLE_SQL_CREATE = "create table PT_UserInfo (uuid_ VARCHAR(75) null,groupId LONG,companyId LONG,creatorId LONG,createDate DATE null,modifiedDate DATE null,userId LONG,code_ VARCHAR(75) not null primary key,username VARCHAR(75) null,email VARCHAR(75) null,phone VARCHAR(75) null)";
	public static final String TABLE_SQL_DROP = "drop table PT_UserInfo";
	public static final String ORDER_BY_JPQL = " ORDER BY userInfo.code ASC";
	public static final String ORDER_BY_SQL = " ORDER BY PT_UserInfo.code_ ASC";
	public static final String DATA_SOURCE = "liferayDataSource";
	public static final String SESSION_FACTORY = "liferaySessionFactory";
	public static final String TX_MANAGER = "liferayTransactionManager";
	public static final boolean ENTITY_CACHE_ENABLED = GetterUtil.getBoolean(com.liferay.util.service.ServiceProps.get(
				"value.object.entity.cache.enabled.com.liferay.adduser.model.UserInfo"),
			true);
	public static final boolean FINDER_CACHE_ENABLED = GetterUtil.getBoolean(com.liferay.util.service.ServiceProps.get(
				"value.object.finder.cache.enabled.com.liferay.adduser.model.UserInfo"),
			true);
	public static final boolean COLUMN_BITMASK_ENABLED = GetterUtil.getBoolean(com.liferay.util.service.ServiceProps.get(
				"value.object.column.bitmask.enabled.com.liferay.adduser.model.UserInfo"),
			true);
	public static long CODE_COLUMN_BITMASK = 1L;
	public static long COMPANYID_COLUMN_BITMASK = 2L;
	public static long GROUPID_COLUMN_BITMASK = 4L;
	public static long USERID_COLUMN_BITMASK = 8L;
	public static long UUID_COLUMN_BITMASK = 16L;

	/**
	 * Converts the soap model instance into a normal model instance.
	 *
	 * @param soapModel the soap model instance to convert
	 * @return the normal model instance
	 */
	public static UserInfo toModel(UserInfoSoap soapModel) {
		if (soapModel == null) {
			return null;
		}

		UserInfo model = new UserInfoImpl();

		model.setUuid(soapModel.getUuid());
		model.setGroupId(soapModel.getGroupId());
		model.setCompanyId(soapModel.getCompanyId());
		model.setCreatorId(soapModel.getCreatorId());
		model.setCreateDate(soapModel.getCreateDate());
		model.setModifiedDate(soapModel.getModifiedDate());
		model.setUserId(soapModel.getUserId());
		model.setCode(soapModel.getCode());
		model.setUsername(soapModel.getUsername());
		model.setEmail(soapModel.getEmail());
		model.setPhone(soapModel.getPhone());

		return model;
	}

	/**
	 * Converts the soap model instances into normal model instances.
	 *
	 * @param soapModels the soap model instances to convert
	 * @return the normal model instances
	 */
	public static List<UserInfo> toModels(UserInfoSoap[] soapModels) {
		if (soapModels == null) {
			return null;
		}

		List<UserInfo> models = new ArrayList<UserInfo>(soapModels.length);

		for (UserInfoSoap soapModel : soapModels) {
			models.add(toModel(soapModel));
		}

		return models;
	}

	public static final long LOCK_EXPIRATION_TIME = GetterUtil.getLong(com.liferay.util.service.ServiceProps.get(
				"lock.expiration.time.com.liferay.adduser.model.UserInfo"));

	public UserInfoModelImpl() {
	}

	@Override
	public String getPrimaryKey() {
		return _code;
	}

	@Override
	public void setPrimaryKey(String primaryKey) {
		setCode(primaryKey);
	}

	@Override
	public Serializable getPrimaryKeyObj() {
		return _code;
	}

	@Override
	public void setPrimaryKeyObj(Serializable primaryKeyObj) {
		setPrimaryKey((String)primaryKeyObj);
	}

	@Override
	public Class<?> getModelClass() {
		return UserInfo.class;
	}

	@Override
	public String getModelClassName() {
		return UserInfo.class.getName();
	}

	@Override
	public Map<String, Object> getModelAttributes() {
		Map<String, Object> attributes = new HashMap<String, Object>();

		attributes.put("uuid", getUuid());
		attributes.put("groupId", getGroupId());
		attributes.put("companyId", getCompanyId());
		attributes.put("creatorId", getCreatorId());
		attributes.put("createDate", getCreateDate());
		attributes.put("modifiedDate", getModifiedDate());
		attributes.put("userId", getUserId());
		attributes.put("code", getCode());
		attributes.put("username", getUsername());
		attributes.put("email", getEmail());
		attributes.put("phone", getPhone());

		return attributes;
	}

	@Override
	public void setModelAttributes(Map<String, Object> attributes) {
		String uuid = (String)attributes.get("uuid");

		if (uuid != null) {
			setUuid(uuid);
		}

		Long groupId = (Long)attributes.get("groupId");

		if (groupId != null) {
			setGroupId(groupId);
		}

		Long companyId = (Long)attributes.get("companyId");

		if (companyId != null) {
			setCompanyId(companyId);
		}

		Long creatorId = (Long)attributes.get("creatorId");

		if (creatorId != null) {
			setCreatorId(creatorId);
		}

		Date createDate = (Date)attributes.get("createDate");

		if (createDate != null) {
			setCreateDate(createDate);
		}

		Date modifiedDate = (Date)attributes.get("modifiedDate");

		if (modifiedDate != null) {
			setModifiedDate(modifiedDate);
		}

		Long userId = (Long)attributes.get("userId");

		if (userId != null) {
			setUserId(userId);
		}

		String code = (String)attributes.get("code");

		if (code != null) {
			setCode(code);
		}

		String username = (String)attributes.get("username");

		if (username != null) {
			setUsername(username);
		}

		String email = (String)attributes.get("email");

		if (email != null) {
			setEmail(email);
		}

		String phone = (String)attributes.get("phone");

		if (phone != null) {
			setPhone(phone);
		}
	}

	@JSON
	@Override
	public String getUuid() {
		if (_uuid == null) {
			return StringPool.BLANK;
		}
		else {
			return _uuid;
		}
	}

	@Override
	public void setUuid(String uuid) {
		if (_originalUuid == null) {
			_originalUuid = _uuid;
		}

		_uuid = uuid;
	}

	public String getOriginalUuid() {
		return GetterUtil.getString(_originalUuid);
	}

	@JSON
	@Override
	public long getGroupId() {
		return _groupId;
	}

	@Override
	public void setGroupId(long groupId) {
		_columnBitmask |= GROUPID_COLUMN_BITMASK;

		if (!_setOriginalGroupId) {
			_setOriginalGroupId = true;

			_originalGroupId = _groupId;
		}

		_groupId = groupId;
	}

	public long getOriginalGroupId() {
		return _originalGroupId;
	}

	@JSON
	@Override
	public long getCompanyId() {
		return _companyId;
	}

	@Override
	public void setCompanyId(long companyId) {
		_columnBitmask |= COMPANYID_COLUMN_BITMASK;

		if (!_setOriginalCompanyId) {
			_setOriginalCompanyId = true;

			_originalCompanyId = _companyId;
		}

		_companyId = companyId;
	}

	public long getOriginalCompanyId() {
		return _originalCompanyId;
	}

	@JSON
	@Override
	public long getCreatorId() {
		return _creatorId;
	}

	@Override
	public void setCreatorId(long creatorId) {
		_creatorId = creatorId;
	}

	@JSON
	@Override
	public Date getCreateDate() {
		return _createDate;
	}

	@Override
	public void setCreateDate(Date createDate) {
		_createDate = createDate;
	}

	@JSON
	@Override
	public Date getModifiedDate() {
		return _modifiedDate;
	}

	@Override
	public void setModifiedDate(Date modifiedDate) {
		_modifiedDate = modifiedDate;
	}

	@JSON
	@Override
	public long getUserId() {
		return _userId;
	}

	@Override
	public void setUserId(long userId) {
		_columnBitmask |= USERID_COLUMN_BITMASK;

		if (!_setOriginalUserId) {
			_setOriginalUserId = true;

			_originalUserId = _userId;
		}

		_userId = userId;
	}

	@Override
	public String getUserUuid() throws SystemException {
		return PortalUtil.getUserValue(getUserId(), "uuid", _userUuid);
	}

	@Override
	public void setUserUuid(String userUuid) {
		_userUuid = userUuid;
	}

	public long getOriginalUserId() {
		return _originalUserId;
	}

	@JSON
	@Override
	public String getCode() {
		if (_code == null) {
			return StringPool.BLANK;
		}
		else {
			return _code;
		}
	}

	@Override
	public void setCode(String code) {
		_columnBitmask |= CODE_COLUMN_BITMASK;

		if (_originalCode == null) {
			_originalCode = _code;
		}

		_code = code;
	}

	public String getOriginalCode() {
		return GetterUtil.getString(_originalCode);
	}

	@JSON
	@Override
	public String getUsername() {
		if (_username == null) {
			return StringPool.BLANK;
		}
		else {
			return _username;
		}
	}

	@Override
	public void setUsername(String username) {
		_username = username;
	}

	@JSON
	@Override
	public String getEmail() {
		if (_email == null) {
			return StringPool.BLANK;
		}
		else {
			return _email;
		}
	}

	@Override
	public void setEmail(String email) {
		_email = email;
	}

	@JSON
	@Override
	public String getPhone() {
		if (_phone == null) {
			return StringPool.BLANK;
		}
		else {
			return _phone;
		}
	}

	@Override
	public void setPhone(String phone) {
		_phone = phone;
	}

	@Override
	public StagedModelType getStagedModelType() {
		return new StagedModelType(PortalUtil.getClassNameId(
				UserInfo.class.getName()));
	}

	public long getColumnBitmask() {
		return _columnBitmask;
	}

	@Override
	public UserInfo toEscapedModel() {
		if (_escapedModel == null) {
			_escapedModel = (UserInfo)ProxyUtil.newProxyInstance(_classLoader,
					_escapedModelInterfaces, new AutoEscapeBeanHandler(this));
		}

		return _escapedModel;
	}

	@Override
	public Object clone() {
		UserInfoImpl userInfoImpl = new UserInfoImpl();

		userInfoImpl.setUuid(getUuid());
		userInfoImpl.setGroupId(getGroupId());
		userInfoImpl.setCompanyId(getCompanyId());
		userInfoImpl.setCreatorId(getCreatorId());
		userInfoImpl.setCreateDate(getCreateDate());
		userInfoImpl.setModifiedDate(getModifiedDate());
		userInfoImpl.setUserId(getUserId());
		userInfoImpl.setCode(getCode());
		userInfoImpl.setUsername(getUsername());
		userInfoImpl.setEmail(getEmail());
		userInfoImpl.setPhone(getPhone());

		userInfoImpl.resetOriginalValues();

		return userInfoImpl;
	}

	@Override
	public int compareTo(UserInfo userInfo) {
		String primaryKey = userInfo.getPrimaryKey();

		return getPrimaryKey().compareTo(primaryKey);
	}

	@Override
	public boolean equals(Object obj) {
		if (this == obj) {
			return true;
		}

		if (!(obj instanceof UserInfo)) {
			return false;
		}

		UserInfo userInfo = (UserInfo)obj;

		String primaryKey = userInfo.getPrimaryKey();

		if (getPrimaryKey().equals(primaryKey)) {
			return true;
		}
		else {
			return false;
		}
	}

	@Override
	public int hashCode() {
		return getPrimaryKey().hashCode();
	}

	@Override
	public void resetOriginalValues() {
		UserInfoModelImpl userInfoModelImpl = this;

		userInfoModelImpl._originalUuid = userInfoModelImpl._uuid;

		userInfoModelImpl._originalGroupId = userInfoModelImpl._groupId;

		userInfoModelImpl._setOriginalGroupId = false;

		userInfoModelImpl._originalCompanyId = userInfoModelImpl._companyId;

		userInfoModelImpl._setOriginalCompanyId = false;

		userInfoModelImpl._originalUserId = userInfoModelImpl._userId;

		userInfoModelImpl._setOriginalUserId = false;

		userInfoModelImpl._originalCode = userInfoModelImpl._code;

		userInfoModelImpl._columnBitmask = 0;
	}

	@Override
	public CacheModel<UserInfo> toCacheModel() {
		UserInfoCacheModel userInfoCacheModel = new UserInfoCacheModel();

		userInfoCacheModel.uuid = getUuid();

		String uuid = userInfoCacheModel.uuid;

		if ((uuid != null) && (uuid.length() == 0)) {
			userInfoCacheModel.uuid = null;
		}

		userInfoCacheModel.groupId = getGroupId();

		userInfoCacheModel.companyId = getCompanyId();

		userInfoCacheModel.creatorId = getCreatorId();

		Date createDate = getCreateDate();

		if (createDate != null) {
			userInfoCacheModel.createDate = createDate.getTime();
		}
		else {
			userInfoCacheModel.createDate = Long.MIN_VALUE;
		}

		Date modifiedDate = getModifiedDate();

		if (modifiedDate != null) {
			userInfoCacheModel.modifiedDate = modifiedDate.getTime();
		}
		else {
			userInfoCacheModel.modifiedDate = Long.MIN_VALUE;
		}

		userInfoCacheModel.userId = getUserId();

		userInfoCacheModel.code = getCode();

		String code = userInfoCacheModel.code;

		if ((code != null) && (code.length() == 0)) {
			userInfoCacheModel.code = null;
		}

		userInfoCacheModel.username = getUsername();

		String username = userInfoCacheModel.username;

		if ((username != null) && (username.length() == 0)) {
			userInfoCacheModel.username = null;
		}

		userInfoCacheModel.email = getEmail();

		String email = userInfoCacheModel.email;

		if ((email != null) && (email.length() == 0)) {
			userInfoCacheModel.email = null;
		}

		userInfoCacheModel.phone = getPhone();

		String phone = userInfoCacheModel.phone;

		if ((phone != null) && (phone.length() == 0)) {
			userInfoCacheModel.phone = null;
		}

		return userInfoCacheModel;
	}

	@Override
	public String toString() {
		StringBundler sb = new StringBundler(23);

		sb.append("{uuid=");
		sb.append(getUuid());
		sb.append(", groupId=");
		sb.append(getGroupId());
		sb.append(", companyId=");
		sb.append(getCompanyId());
		sb.append(", creatorId=");
		sb.append(getCreatorId());
		sb.append(", createDate=");
		sb.append(getCreateDate());
		sb.append(", modifiedDate=");
		sb.append(getModifiedDate());
		sb.append(", userId=");
		sb.append(getUserId());
		sb.append(", code=");
		sb.append(getCode());
		sb.append(", username=");
		sb.append(getUsername());
		sb.append(", email=");
		sb.append(getEmail());
		sb.append(", phone=");
		sb.append(getPhone());
		sb.append("}");

		return sb.toString();
	}

	@Override
	public String toXmlString() {
		StringBundler sb = new StringBundler(37);

		sb.append("<model><model-name>");
		sb.append("com.liferay.adduser.model.UserInfo");
		sb.append("</model-name>");

		sb.append(
			"<column><column-name>uuid</column-name><column-value><![CDATA[");
		sb.append(getUuid());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>groupId</column-name><column-value><![CDATA[");
		sb.append(getGroupId());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>companyId</column-name><column-value><![CDATA[");
		sb.append(getCompanyId());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>creatorId</column-name><column-value><![CDATA[");
		sb.append(getCreatorId());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>createDate</column-name><column-value><![CDATA[");
		sb.append(getCreateDate());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>modifiedDate</column-name><column-value><![CDATA[");
		sb.append(getModifiedDate());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>userId</column-name><column-value><![CDATA[");
		sb.append(getUserId());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>code</column-name><column-value><![CDATA[");
		sb.append(getCode());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>username</column-name><column-value><![CDATA[");
		sb.append(getUsername());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>email</column-name><column-value><![CDATA[");
		sb.append(getEmail());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>phone</column-name><column-value><![CDATA[");
		sb.append(getPhone());
		sb.append("]]></column-value></column>");

		sb.append("</model>");

		return sb.toString();
	}

	private static ClassLoader _classLoader = UserInfo.class.getClassLoader();
	private static Class<?>[] _escapedModelInterfaces = new Class[] {
			UserInfo.class
		};
	private String _uuid;
	private String _originalUuid;
	private long _groupId;
	private long _originalGroupId;
	private boolean _setOriginalGroupId;
	private long _companyId;
	private long _originalCompanyId;
	private boolean _setOriginalCompanyId;
	private long _creatorId;
	private Date _createDate;
	private Date _modifiedDate;
	private long _userId;
	private String _userUuid;
	private long _originalUserId;
	private boolean _setOriginalUserId;
	private String _code;
	private String _originalCode;
	private String _username;
	private String _email;
	private String _phone;
	private long _columnBitmask;
	private UserInfo _escapedModel;
}